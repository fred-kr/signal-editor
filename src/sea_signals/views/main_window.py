# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'main_window.ui'
##
## Created by: Qt User Interface Compiler version 6.6.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QAbstractScrollArea, QAbstractSpinBox, QApplication,
    QButtonGroup, QComboBox, QDateEdit, QDockWidget,
    QDoubleSpinBox, QFormLayout, QFrame, QGridLayout,
    QGroupBox, QHBoxLayout, QHeaderView, QLabel,
    QLineEdit, QMainWindow, QMenu, QMenuBar,
    QPushButton, QSizePolicy, QSlider, QSpacerItem,
    QSpinBox, QStackedWidget, QStatusBar, QTabWidget,
    QTableView, QTextBrowser, QToolBar, QVBoxLayout,
    QWidget)

from pyqtgraph import ComboBox
from . import icons_rc

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(2467, 1205)
        sizePolicy = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setDocumentMode(False)
        MainWindow.setDockOptions(QMainWindow.AllowNestedDocks|QMainWindow.AllowTabbedDocks|QMainWindow.AnimatedDocks)
        self.action_open_console = QAction(MainWindow)
        self.action_open_console.setObjectName(u"action_open_console")
        self.action_open_console.setChecked(False)
        icon = QIcon()
        icon.addFile(u":/material-symbols/terminal_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_open_console.setIcon(icon)
        self.action_open_console.setVisible(True)
        self.action_open_console.setMenuRole(QAction.NoRole)
        self.action_toggle_sidebar = QAction(MainWindow)
        self.action_toggle_sidebar.setObjectName(u"action_toggle_sidebar")
        self.action_toggle_sidebar.setCheckable(True)
        self.action_toggle_sidebar.setChecked(True)
        icon1 = QIcon()
        icon1.addFile(u":/material-symbols/thumbnail_bar_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_toggle_sidebar.setIcon(icon1)
        self.action_toggle_sidebar.setMenuRole(QAction.NoRole)
        self.action_select_file = QAction(MainWindow)
        self.action_select_file.setObjectName(u"action_select_file")
        icon2 = QIcon()
        icon2.addFile(u":/material-symbols/folder_open_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_select_file.setIcon(icon2)
        self.action_exit = QAction(MainWindow)
        self.action_exit.setObjectName(u"action_exit")
        icon3 = QIcon()
        icon3.addFile(u":/icon/bonus/icons-24/cross-circle.png", QSize(), QIcon.Normal, QIcon.On)
        self.action_exit.setIcon(icon3)
        self.action_exit.setMenuRole(QAction.QuitRole)
        self.action_update_result = QAction(MainWindow)
        self.action_update_result.setObjectName(u"action_update_result")
        icon4 = QIcon()
        icon4.addFile(u":/material-symbols/output_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_update_result.setIcon(icon4)
        self.action_update_result.setMenuRole(QAction.NoRole)
        self.action_pan_mode = QAction(MainWindow)
        self.action_pan_mode.setObjectName(u"action_pan_mode")
        self.action_pan_mode.setCheckable(True)
        icon5 = QIcon()
        icon5.addFile(u":/material-symbols/drag_pan_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_pan_mode.setIcon(icon5)
        self.action_pan_mode.setMenuRole(QAction.NoRole)
        self.action_pan_mode.setIconVisibleInMenu(True)
        self.action_rect_mode = QAction(MainWindow)
        self.action_rect_mode.setObjectName(u"action_rect_mode")
        self.action_rect_mode.setCheckable(True)
        icon6 = QIcon()
        icon6.addFile(u":/material-symbols/crop_free_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_rect_mode.setIcon(icon6)
        self.action_rect_mode.setMenuRole(QAction.NoRole)
        self.action_reset_view = QAction(MainWindow)
        self.action_reset_view.setObjectName(u"action_reset_view")
        icon7 = QIcon()
        icon7.addFile(u":/material-symbols/fit_screen_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_reset_view.setIcon(icon7)
        self.action_reset_view.setMenuRole(QAction.NoRole)
        self.action_redraw_with_current_values = QAction(MainWindow)
        self.action_redraw_with_current_values.setObjectName(u"action_redraw_with_current_values")
        icon8 = QIcon()
        icon8.addFile(u":/material-symbols/refresh_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_redraw_with_current_values.setIcon(icon8)
        self.action_redraw_with_current_values.setMenuRole(QAction.NoRole)
        self.action_step_backward = QAction(MainWindow)
        self.action_step_backward.setObjectName(u"action_step_backward")
        icon9 = QIcon()
        icon9.addFile(u":/material-symbols/arrow_back_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_step_backward.setIcon(icon9)
        self.action_step_backward.setMenuRole(QAction.NoRole)
        self.action_step_forward = QAction(MainWindow)
        self.action_step_forward.setObjectName(u"action_step_forward")
        icon10 = QIcon()
        icon10.addFile(u":/material-symbols/arrow_forward_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_step_forward.setIcon(icon10)
        self.action_step_forward.setMenuRole(QAction.NoRole)
        self.action_toggle_whats_this_mode = QAction(MainWindow)
        self.action_toggle_whats_this_mode.setObjectName(u"action_toggle_whats_this_mode")
        self.action_toggle_whats_this_mode.setCheckable(True)
        icon11 = QIcon()
        icon11.addFile(u":/material-symbols/help_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_toggle_whats_this_mode.setIcon(icon11)
        self.action_toggle_whats_this_mode.setMenuRole(QAction.NoRole)
        self.action_show_roi = QAction(MainWindow)
        self.action_show_roi.setObjectName(u"action_show_roi")
        icon12 = QIcon()
        icon12.addFile(u":/material-symbols/select_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_show_roi.setIcon(icon12)
        self.action_show_roi.setMenuRole(QAction.NoRole)
        self.action_run_preprocessing = QAction(MainWindow)
        self.action_run_preprocessing.setObjectName(u"action_run_preprocessing")
        icon13 = QIcon()
        icon13.addFile(u":/material-symbols/data_thresholding_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_run_preprocessing.setIcon(icon13)
        self.action_run_preprocessing.setAutoRepeat(False)
        self.action_run_peak_detection = QAction(MainWindow)
        self.action_run_peak_detection.setObjectName(u"action_run_peak_detection")
        icon14 = QIcon()
        icon14.addFile(u":/material-symbols/query_stats_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_run_peak_detection.setIcon(icon14)
        self.action_run_peak_detection.setAutoRepeat(False)
        self.action_get_results = QAction(MainWindow)
        self.action_get_results.setObjectName(u"action_get_results")
        icon15 = QIcon()
        icon15.addFile(u":/material-symbols/start_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_get_results.setIcon(icon15)
        self.action_get_results.setMenuRole(QAction.NoRole)
        self.action_remove_selected_peaks = QAction(MainWindow)
        self.action_remove_selected_peaks.setObjectName(u"action_remove_selected_peaks")
        self.action_remove_selected_peaks.setCheckable(False)
        icon16 = QIcon()
        icon16.addFile(u":/material-symbols/remove_selection_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_remove_selected_peaks.setIcon(icon16)
        self.action_remove_selected_peaks.setMenuRole(QAction.NoRole)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.horizontalLayout = QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.tabs_main = QTabWidget(self.centralwidget)
        self.tabs_main.setObjectName(u"tabs_main")
        sizePolicy1 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.tabs_main.sizePolicy().hasHeightForWidth())
        self.tabs_main.setSizePolicy(sizePolicy1)
        self.tabs_main.setTabShape(QTabWidget.Rounded)
        self.tab_data = QWidget()
        self.tab_data.setObjectName(u"tab_data")
        self.gridLayout_4 = QGridLayout(self.tab_data)
        self.gridLayout_4.setObjectName(u"gridLayout_4")
        self.table_data_info = QTableView(self.tab_data)
        self.table_data_info.setObjectName(u"table_data_info")
        sizePolicy1.setHeightForWidth(self.table_data_info.sizePolicy().hasHeightForWidth())
        self.table_data_info.setSizePolicy(sizePolicy1)
        self.table_data_info.setSizeAdjustPolicy(QAbstractScrollArea.AdjustToContents)
        self.table_data_info.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.table_data_info.horizontalHeader().setMinimumSectionSize(75)
        self.table_data_info.horizontalHeader().setHighlightSections(True)
        self.table_data_info.verticalHeader().setVisible(False)

        self.gridLayout_4.addWidget(self.table_data_info, 0, 1, 1, 1)

        self.table_data_preview = QTableView(self.tab_data)
        self.table_data_preview.setObjectName(u"table_data_preview")
        self.table_data_preview.setFrameShape(QFrame.StyledPanel)
        self.table_data_preview.setFrameShadow(QFrame.Plain)
        self.table_data_preview.setMidLineWidth(1)
        self.table_data_preview.setSizeAdjustPolicy(QAbstractScrollArea.AdjustToContents)
        self.table_data_preview.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.table_data_preview.setProperty("showDropIndicator", False)
        self.table_data_preview.setAlternatingRowColors(True)
        self.table_data_preview.setSelectionMode(QAbstractItemView.NoSelection)
        self.table_data_preview.setWordWrap(False)
        self.table_data_preview.setCornerButtonEnabled(False)
        self.table_data_preview.horizontalHeader().setMinimumSectionSize(75)
        self.table_data_preview.horizontalHeader().setDefaultSectionSize(150)
        self.table_data_preview.horizontalHeader().setHighlightSections(False)
        self.table_data_preview.horizontalHeader().setStretchLastSection(False)
        self.table_data_preview.verticalHeader().setVisible(False)

        self.gridLayout_4.addWidget(self.table_data_preview, 0, 0, 3, 1)

        self.container_text_info = QFrame(self.tab_data)
        self.container_text_info.setObjectName(u"container_text_info")
        self.verticalLayout_8 = QVBoxLayout(self.container_text_info)
        self.verticalLayout_8.setObjectName(u"verticalLayout_8")
        self.label_19 = QLabel(self.container_text_info)
        self.label_19.setObjectName(u"label_19")

        self.verticalLayout_8.addWidget(self.label_19)

        self.text_info_loading_data = QTextBrowser(self.container_text_info)
        self.text_info_loading_data.setObjectName(u"text_info_loading_data")
        sizePolicy1.setHeightForWidth(self.text_info_loading_data.sizePolicy().hasHeightForWidth())
        self.text_info_loading_data.setSizePolicy(sizePolicy1)

        self.verticalLayout_8.addWidget(self.text_info_loading_data)


        self.gridLayout_4.addWidget(self.container_text_info, 1, 1, 1, 1)

        icon17 = QIcon()
        icon17.addFile(u":/material-symbols/dataset_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.tabs_main.addTab(self.tab_data, icon17, "")
        self.tab_plots = QWidget()
        self.tab_plots.setObjectName(u"tab_plots")
        self.verticalLayout_4 = QVBoxLayout(self.tab_plots)
        self.verticalLayout_4.setObjectName(u"verticalLayout_4")
        self.stacked_hbr_vent = QStackedWidget(self.tab_plots)
        self.stacked_hbr_vent.setObjectName(u"stacked_hbr_vent")
        sizePolicy.setHeightForWidth(self.stacked_hbr_vent.sizePolicy().hasHeightForWidth())
        self.stacked_hbr_vent.setSizePolicy(sizePolicy)
        self.stacked_page_hbr = QWidget()
        self.stacked_page_hbr.setObjectName(u"stacked_page_hbr")
        self.verticalLayout = QVBoxLayout(self.stacked_page_hbr)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.plot_widget_hbr = QWidget(self.stacked_page_hbr)
        self.plot_widget_hbr.setObjectName(u"plot_widget_hbr")

        self.verticalLayout.addWidget(self.plot_widget_hbr)

        self.stacked_hbr_vent.addWidget(self.stacked_page_hbr)
        self.stacked_page_vent = QWidget()
        self.stacked_page_vent.setObjectName(u"stacked_page_vent")
        self.verticalLayout_3 = QVBoxLayout(self.stacked_page_vent)
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.plot_widget_vent = QWidget(self.stacked_page_vent)
        self.plot_widget_vent.setObjectName(u"plot_widget_vent")

        self.verticalLayout_3.addWidget(self.plot_widget_vent)

        self.stacked_hbr_vent.addWidget(self.stacked_page_vent)

        self.verticalLayout_4.addWidget(self.stacked_hbr_vent)

        icon18 = QIcon()
        icon18.addFile(u":/material-symbols/earthquake_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.tabs_main.addTab(self.tab_plots, icon18, "")
        self.tab_results = QWidget()
        self.tab_results.setObjectName(u"tab_results")
        sizePolicy2 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Preferred)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.tab_results.sizePolicy().hasHeightForWidth())
        self.tab_results.setSizePolicy(sizePolicy2)
        self.gridLayout_12 = QGridLayout(self.tab_results)
        self.gridLayout_12.setObjectName(u"gridLayout_12")
        self.container_results = QWidget(self.tab_results)
        self.container_results.setObjectName(u"container_results")
        self.gridLayout_8 = QGridLayout(self.container_results)
        self.gridLayout_8.setObjectName(u"gridLayout_8")
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.container_results_plot = QWidget(self.container_results)
        self.container_results_plot.setObjectName(u"container_results_plot")
        self.gridLayout_13 = QGridLayout(self.container_results_plot)
        self.gridLayout_13.setObjectName(u"gridLayout_13")
        self.gridLayout_13.setContentsMargins(0, 0, 0, 0)

        self.gridLayout_8.addWidget(self.container_results_plot, 0, 0, 2, 1)

        self.container_results_table = QWidget(self.container_results)
        self.container_results_table.setObjectName(u"container_results_table")
        self.gridLayout_11 = QGridLayout(self.container_results_table)
        self.gridLayout_11.setObjectName(u"gridLayout_11")
        self.gridLayout_11.setContentsMargins(0, 0, 0, 0)
        self.container_results_output_dir = QWidget(self.container_results_table)
        self.container_results_output_dir.setObjectName(u"container_results_output_dir")
        self.horizontalLayout_6 = QHBoxLayout(self.container_results_output_dir)
        self.horizontalLayout_6.setObjectName(u"horizontalLayout_6")
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.btn_browse_output_dir = QPushButton(self.container_results_output_dir)
        self.btn_browse_output_dir.setObjectName(u"btn_browse_output_dir")
        icon19 = QIcon()
        icon19.addFile(u":/material-symbols/folder_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.btn_browse_output_dir.setIcon(icon19)

        self.horizontalLayout_6.addWidget(self.btn_browse_output_dir)

        self.line_edit_output_dir = QLineEdit(self.container_results_output_dir)
        self.line_edit_output_dir.setObjectName(u"line_edit_output_dir")
        self.line_edit_output_dir.setClearButtonEnabled(True)

        self.horizontalLayout_6.addWidget(self.line_edit_output_dir)


        self.gridLayout_11.addWidget(self.container_results_output_dir, 0, 1, 1, 3)

        self.btn_export_to_csv = QPushButton(self.container_results_table)
        self.btn_export_to_csv.setObjectName(u"btn_export_to_csv")
        sizePolicy3 = QSizePolicy(QSizePolicy.Minimum, QSizePolicy.Preferred)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.btn_export_to_csv.sizePolicy().hasHeightForWidth())
        self.btn_export_to_csv.setSizePolicy(sizePolicy3)
        self.btn_export_to_csv.setMinimumSize(QSize(0, 50))

        self.gridLayout_11.addWidget(self.btn_export_to_csv, 1, 1, 1, 1)

        self.btn_export_to_excel = QPushButton(self.container_results_table)
        self.btn_export_to_excel.setObjectName(u"btn_export_to_excel")
        sizePolicy3.setHeightForWidth(self.btn_export_to_excel.sizePolicy().hasHeightForWidth())
        self.btn_export_to_excel.setSizePolicy(sizePolicy3)
        self.btn_export_to_excel.setMinimumSize(QSize(0, 50))

        self.gridLayout_11.addWidget(self.btn_export_to_excel, 1, 3, 1, 1)

        self.btn_export_to_text = QPushButton(self.container_results_table)
        self.btn_export_to_text.setObjectName(u"btn_export_to_text")
        sizePolicy3.setHeightForWidth(self.btn_export_to_text.sizePolicy().hasHeightForWidth())
        self.btn_export_to_text.setSizePolicy(sizePolicy3)
        self.btn_export_to_text.setMinimumSize(QSize(0, 50))

        self.gridLayout_11.addWidget(self.btn_export_to_text, 1, 2, 1, 1)

        self.tabs_result = QTabWidget(self.container_results_table)
        self.tabs_result.setObjectName(u"tabs_result")
        self.tabs_result.setLayoutDirection(Qt.LeftToRight)
        self.tab_results_hbr = QWidget()
        self.tab_results_hbr.setObjectName(u"tab_results_hbr")
        self.verticalLayout_6 = QVBoxLayout(self.tab_results_hbr)
        self.verticalLayout_6.setObjectName(u"verticalLayout_6")
        self.table_view_results_hbr = QTableView(self.tab_results_hbr)
        self.table_view_results_hbr.setObjectName(u"table_view_results_hbr")
        sizePolicy1.setHeightForWidth(self.table_view_results_hbr.sizePolicy().hasHeightForWidth())
        self.table_view_results_hbr.setSizePolicy(sizePolicy1)
        self.table_view_results_hbr.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.table_view_results_hbr.setTabKeyNavigation(False)
        self.table_view_results_hbr.setProperty("showDropIndicator", False)
        self.table_view_results_hbr.setDragDropOverwriteMode(False)
        self.table_view_results_hbr.setSelectionMode(QAbstractItemView.NoSelection)
        self.table_view_results_hbr.setCornerButtonEnabled(False)
        self.table_view_results_hbr.horizontalHeader().setHighlightSections(False)
        self.table_view_results_hbr.verticalHeader().setVisible(False)
        self.table_view_results_hbr.verticalHeader().setDefaultSectionSize(24)

        self.verticalLayout_6.addWidget(self.table_view_results_hbr)

        self.tabs_result.addTab(self.tab_results_hbr, "")
        self.tab_results_ventilation = QWidget()
        self.tab_results_ventilation.setObjectName(u"tab_results_ventilation")
        self.verticalLayout_7 = QVBoxLayout(self.tab_results_ventilation)
        self.verticalLayout_7.setObjectName(u"verticalLayout_7")
        self.table_view_results_ventilation = QTableView(self.tab_results_ventilation)
        self.table_view_results_ventilation.setObjectName(u"table_view_results_ventilation")
        sizePolicy1.setHeightForWidth(self.table_view_results_ventilation.sizePolicy().hasHeightForWidth())
        self.table_view_results_ventilation.setSizePolicy(sizePolicy1)
        self.table_view_results_ventilation.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.table_view_results_ventilation.setTabKeyNavigation(False)
        self.table_view_results_ventilation.setProperty("showDropIndicator", False)
        self.table_view_results_ventilation.setDragDropOverwriteMode(False)
        self.table_view_results_ventilation.setAlternatingRowColors(False)
        self.table_view_results_ventilation.setSelectionMode(QAbstractItemView.NoSelection)
        self.table_view_results_ventilation.setCornerButtonEnabled(False)
        self.table_view_results_ventilation.horizontalHeader().setHighlightSections(False)
        self.table_view_results_ventilation.verticalHeader().setVisible(False)
        self.table_view_results_ventilation.verticalHeader().setDefaultSectionSize(24)

        self.verticalLayout_7.addWidget(self.table_view_results_ventilation)

        self.tabs_result.addTab(self.tab_results_ventilation, "")

        self.gridLayout_11.addWidget(self.tabs_result, 2, 1, 1, 3)


        self.gridLayout_8.addWidget(self.container_results_table, 0, 1, 2, 2)

        self.gridLayout_8.setColumnStretch(0, 2)
        self.gridLayout_8.setColumnStretch(1, 1)
        self.gridLayout_8.setColumnStretch(2, 1)

        self.gridLayout_12.addWidget(self.container_results, 4, 0, 2, 2)

        icon20 = QIcon()
        icon20.addFile(u":/material-symbols/table_chart_view_FILL0_wght400_GRAD0_opsz24.png", QSize(), QIcon.Normal, QIcon.Off)
        self.tabs_main.addTab(self.tab_results, icon20, "")

        self.horizontalLayout.addWidget(self.tabs_main)

        self.horizontalLayout.setStretch(0, 10)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 2467, 22))
        self.menu_file = QMenu(self.menubar)
        self.menu_file.setObjectName(u"menu_file")
        self.menu_info = QMenu(self.menubar)
        self.menu_info.setObjectName(u"menu_info")
        MainWindow.setMenuBar(self.menubar)
        self.toolbar = QToolBar(MainWindow)
        self.toolbar.setObjectName(u"toolbar")
        self.toolbar.setMovable(False)
        self.toolbar.setAllowedAreas(Qt.AllToolBarAreas)
        self.toolbar.setOrientation(Qt.Horizontal)
        self.toolbar.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.toolbar.setFloatable(False)
        MainWindow.addToolBar(Qt.TopToolBarArea, self.toolbar)
        self.toolbar_plots = QToolBar(MainWindow)
        self.toolbar_plots.setObjectName(u"toolbar_plots")
        self.toolbar_plots.setEnabled(False)
        sizePolicy.setHeightForWidth(self.toolbar_plots.sizePolicy().hasHeightForWidth())
        self.toolbar_plots.setSizePolicy(sizePolicy)
        self.toolbar_plots.setLayoutDirection(Qt.RightToLeft)
        self.toolbar_plots.setMovable(True)
        self.toolbar_plots.setAllowedAreas(Qt.RightToolBarArea|Qt.TopToolBarArea)
        self.toolbar_plots.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.toolbar_plots.setFloatable(True)
        MainWindow.addToolBar(Qt.TopToolBarArea, self.toolbar_plots)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u"statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.dock_widget_sidebar = QDockWidget(MainWindow)
        self.dock_widget_sidebar.setObjectName(u"dock_widget_sidebar")
        self.dock_widget_sidebar.setMinimumSize(QSize(475, 855))
        self.dock_widget_sidebar.setFeatures(QDockWidget.DockWidgetFloatable|QDockWidget.DockWidgetMovable)
        self.dock_widget_sidebar.setAllowedAreas(Qt.LeftDockWidgetArea|Qt.RightDockWidgetArea)
        self.sidebar_dock_contents = QWidget()
        self.sidebar_dock_contents.setObjectName(u"sidebar_dock_contents")
        self.layout_sidebar_dock = QGridLayout(self.sidebar_dock_contents)
        self.layout_sidebar_dock.setObjectName(u"layout_sidebar_dock")
        self.layout_sidebar_dock.setContentsMargins(0, 0, 0, 0)
        self.sidebar = QStackedWidget(self.sidebar_dock_contents)
        self.sidebar.setObjectName(u"sidebar")
        sizePolicy.setHeightForWidth(self.sidebar.sizePolicy().hasHeightForWidth())
        self.sidebar.setSizePolicy(sizePolicy)
        self.sidebar.setMinimumSize(QSize(350, 0))
        self.sidebar.setFrameShape(QFrame.StyledPanel)
        self.sidebar.setFrameShadow(QFrame.Plain)
        self.sidebar_page_data = QWidget()
        self.sidebar_page_data.setObjectName(u"sidebar_page_data")
        self.gridLayout = QGridLayout(self.sidebar_page_data)
        self.gridLayout.setObjectName(u"gridLayout")
        self.label_4 = QLabel(self.sidebar_page_data)
        self.label_4.setObjectName(u"label_4")
        font = QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.label_4.setFont(font)

        self.gridLayout.addWidget(self.label_4, 0, 0, 1, 1)

        self.verticalSpacer_2 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout.addItem(self.verticalSpacer_2, 4, 0, 1, 1)

        self.container_file_info = QFrame(self.sidebar_page_data)
        self.container_file_info.setObjectName(u"container_file_info")
        self.container_file_info.setEnabled(False)
        sizePolicy4 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Maximum)
        sizePolicy4.setHorizontalStretch(0)
        sizePolicy4.setVerticalStretch(0)
        sizePolicy4.setHeightForWidth(self.container_file_info.sizePolicy().hasHeightForWidth())
        self.container_file_info.setSizePolicy(sizePolicy4)
        self.container_file_info.setFrameShape(QFrame.StyledPanel)
        self.formLayout_4 = QFormLayout(self.container_file_info)
        self.formLayout_4.setObjectName(u"formLayout_4")
        self.formLayout_4.setRowWrapPolicy(QFormLayout.WrapAllRows)
        self.label_13 = QLabel(self.container_file_info)
        self.label_13.setObjectName(u"label_13")
        font1 = QFont()
        font1.setPointSize(9)
        font1.setBold(False)
        self.label_13.setFont(font1)

        self.formLayout_4.setWidget(0, QFormLayout.LabelRole, self.label_13)

        self.date_edit_file_info = QDateEdit(self.container_file_info)
        self.date_edit_file_info.setObjectName(u"date_edit_file_info")
        self.date_edit_file_info.setFont(font1)
        self.date_edit_file_info.setWrapping(False)
        self.date_edit_file_info.setButtonSymbols(QAbstractSpinBox.UpDownArrows)
        self.date_edit_file_info.setTime(QTime(1, 0, 0))
        self.date_edit_file_info.setMinimumDateTime(QDateTime(QDate(1970, 1, 1), QTime(1, 0, 0)))
        self.date_edit_file_info.setMinimumDate(QDate(1970, 1, 1))
        self.date_edit_file_info.setCalendarPopup(True)
        self.date_edit_file_info.setTimeSpec(Qt.LocalTime)
        self.date_edit_file_info.setDate(QDate(2017, 7, 1))

        self.formLayout_4.setWidget(0, QFormLayout.FieldRole, self.date_edit_file_info)

        self.label_14 = QLabel(self.container_file_info)
        self.label_14.setObjectName(u"label_14")
        self.label_14.setFont(font1)

        self.formLayout_4.setWidget(1, QFormLayout.LabelRole, self.label_14)

        self.line_edit_subject_id = QLineEdit(self.container_file_info)
        self.line_edit_subject_id.setObjectName(u"line_edit_subject_id")
        self.line_edit_subject_id.setFont(font1)
        self.line_edit_subject_id.setClearButtonEnabled(True)

        self.formLayout_4.setWidget(1, QFormLayout.FieldRole, self.line_edit_subject_id)

        self.label_15 = QLabel(self.container_file_info)
        self.label_15.setObjectName(u"label_15")
        self.label_15.setFont(font1)

        self.formLayout_4.setWidget(2, QFormLayout.LabelRole, self.label_15)

        self.combo_box_oxygen_condition = ComboBox(self.container_file_info)
        self.combo_box_oxygen_condition.setObjectName(u"combo_box_oxygen_condition")
        self.combo_box_oxygen_condition.setFont(font1)

        self.formLayout_4.setWidget(2, QFormLayout.FieldRole, self.combo_box_oxygen_condition)


        self.gridLayout.addWidget(self.container_file_info, 3, 0, 1, 1)

        self.container_data_selection = QFrame(self.sidebar_page_data)
        self.container_data_selection.setObjectName(u"container_data_selection")
        self.container_data_selection.setFont(font)
        self.container_data_selection.setFrameShape(QFrame.StyledPanel)
        self.gridLayout_15 = QGridLayout(self.container_data_selection)
        self.gridLayout_15.setObjectName(u"gridLayout_15")
        self.gridLayout_15.setContentsMargins(-1, 9, -1, -1)
        self.btn_load_selection = QPushButton(self.container_data_selection)
        self.btn_load_selection.setObjectName(u"btn_load_selection")
        self.btn_load_selection.setEnabled(False)
        sizePolicy4.setHeightForWidth(self.btn_load_selection.sizePolicy().hasHeightForWidth())
        self.btn_load_selection.setSizePolicy(sizePolicy4)
        self.btn_load_selection.setMinimumSize(QSize(0, 50))
        self.btn_load_selection.setFont(font)
        self.btn_load_selection.setLayoutDirection(Qt.RightToLeft)

        self.gridLayout_15.addWidget(self.btn_load_selection, 4, 0, 1, 2)

        self.btn_select_file = QPushButton(self.container_data_selection)
        self.btn_select_file.setObjectName(u"btn_select_file")
        sizePolicy5 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Fixed)
        sizePolicy5.setHorizontalStretch(0)
        sizePolicy5.setVerticalStretch(0)
        sizePolicy5.setHeightForWidth(self.btn_select_file.sizePolicy().hasHeightForWidth())
        self.btn_select_file.setSizePolicy(sizePolicy5)
        self.btn_select_file.setFont(font1)

        self.gridLayout_15.addWidget(self.btn_select_file, 0, 0, 1, 1)

        self.group_box_subset_params = QGroupBox(self.container_data_selection)
        self.group_box_subset_params.setObjectName(u"group_box_subset_params")
        self.group_box_subset_params.setEnabled(False)
        sizePolicy4.setHeightForWidth(self.group_box_subset_params.sizePolicy().hasHeightForWidth())
        self.group_box_subset_params.setSizePolicy(sizePolicy4)
        self.group_box_subset_params.setFont(font1)
        self.group_box_subset_params.setFlat(True)
        self.group_box_subset_params.setCheckable(True)
        self.group_box_subset_params.setChecked(False)
        self.formLayout = QFormLayout(self.group_box_subset_params)
        self.formLayout.setObjectName(u"formLayout")
        self.label_filter_column = QLabel(self.group_box_subset_params)
        self.label_filter_column.setObjectName(u"label_filter_column")

        self.formLayout.setWidget(0, QFormLayout.LabelRole, self.label_filter_column)

        self.combo_box_filter_column = QComboBox(self.group_box_subset_params)
        self.combo_box_filter_column.setObjectName(u"combo_box_filter_column")
        sizePolicy5.setHeightForWidth(self.combo_box_filter_column.sizePolicy().hasHeightForWidth())
        self.combo_box_filter_column.setSizePolicy(sizePolicy5)
        self.combo_box_filter_column.setMaxCount(20)

        self.formLayout.setWidget(0, QFormLayout.FieldRole, self.combo_box_filter_column)

        self.label_subset_min = QLabel(self.group_box_subset_params)
        self.label_subset_min.setObjectName(u"label_subset_min")

        self.formLayout.setWidget(1, QFormLayout.LabelRole, self.label_subset_min)

        self.dbl_spin_box_subset_min = QDoubleSpinBox(self.group_box_subset_params)
        self.dbl_spin_box_subset_min.setObjectName(u"dbl_spin_box_subset_min")
        sizePolicy5.setHeightForWidth(self.dbl_spin_box_subset_min.sizePolicy().hasHeightForWidth())
        self.dbl_spin_box_subset_min.setSizePolicy(sizePolicy5)
        self.dbl_spin_box_subset_min.setFrame(True)
        self.dbl_spin_box_subset_min.setCorrectionMode(QAbstractSpinBox.CorrectToNearestValue)

        self.formLayout.setWidget(1, QFormLayout.FieldRole, self.dbl_spin_box_subset_min)

        self.label_subset_max = QLabel(self.group_box_subset_params)
        self.label_subset_max.setObjectName(u"label_subset_max")

        self.formLayout.setWidget(2, QFormLayout.LabelRole, self.label_subset_max)

        self.dbl_spin_box_subset_max = QDoubleSpinBox(self.group_box_subset_params)
        self.dbl_spin_box_subset_max.setObjectName(u"dbl_spin_box_subset_max")
        sizePolicy5.setHeightForWidth(self.dbl_spin_box_subset_max.sizePolicy().hasHeightForWidth())
        self.dbl_spin_box_subset_max.setSizePolicy(sizePolicy5)

        self.formLayout.setWidget(2, QFormLayout.FieldRole, self.dbl_spin_box_subset_max)


        self.gridLayout_15.addWidget(self.group_box_subset_params, 1, 0, 1, 2)

        self.line_edit_active_file = QLineEdit(self.container_data_selection)
        self.line_edit_active_file.setObjectName(u"line_edit_active_file")
        self.line_edit_active_file.setFont(font1)
        self.line_edit_active_file.setReadOnly(True)

        self.gridLayout_15.addWidget(self.line_edit_active_file, 0, 1, 1, 1)

        self.label_17 = QLabel(self.container_data_selection)
        self.label_17.setObjectName(u"label_17")
        self.label_17.setFont(font1)

        self.gridLayout_15.addWidget(self.label_17, 2, 0, 1, 1)

        self.spin_box_fs = QSpinBox(self.container_data_selection)
        self.spin_box_fs.setObjectName(u"spin_box_fs")
        sizePolicy5.setHeightForWidth(self.spin_box_fs.sizePolicy().hasHeightForWidth())
        self.spin_box_fs.setSizePolicy(sizePolicy5)
        self.spin_box_fs.setFont(font1)
        self.spin_box_fs.setWrapping(False)
        self.spin_box_fs.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.spin_box_fs.setAccelerated(True)
        self.spin_box_fs.setMaximum(2000)
        self.spin_box_fs.setStepType(QAbstractSpinBox.AdaptiveDecimalStepType)
        self.spin_box_fs.setValue(200)

        self.gridLayout_15.addWidget(self.spin_box_fs, 3, 0, 1, 2)


        self.gridLayout.addWidget(self.container_data_selection, 1, 0, 1, 1)

        self.label_3 = QLabel(self.sidebar_page_data)
        self.label_3.setObjectName(u"label_3")
        self.label_3.setFont(font)
        self.label_3.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)

        self.gridLayout.addWidget(self.label_3, 2, 0, 1, 1)

        self.sidebar.addWidget(self.sidebar_page_data)
        self.sidebar_page_plots = QWidget()
        self.sidebar_page_plots.setObjectName(u"sidebar_page_plots")
        self.gridLayout_6 = QGridLayout(self.sidebar_page_plots)
        self.gridLayout_6.setObjectName(u"gridLayout_6")
        self.label_5 = QLabel(self.sidebar_page_plots)
        self.label_5.setObjectName(u"label_5")
        sizePolicy5.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy5)
        self.label_5.setFont(font)
        self.label_5.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)

        self.gridLayout_6.addWidget(self.label_5, 0, 0, 1, 1)

        self.label_6 = QLabel(self.sidebar_page_plots)
        self.label_6.setObjectName(u"label_6")
        sizePolicy5.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy5)
        self.label_6.setFont(font)

        self.gridLayout_6.addWidget(self.label_6, 2, 0, 1, 1)

        self.btn_detect_peaks = QPushButton(self.sidebar_page_plots)
        self.btn_detect_peaks.setObjectName(u"btn_detect_peaks")
        self.btn_detect_peaks.setEnabled(True)
        sizePolicy5.setHeightForWidth(self.btn_detect_peaks.sizePolicy().hasHeightForWidth())
        self.btn_detect_peaks.setSizePolicy(sizePolicy5)
        self.btn_detect_peaks.setMinimumSize(QSize(0, 50))
        font2 = QFont()
        font2.setPointSize(11)
        font2.setBold(True)
        self.btn_detect_peaks.setFont(font2)
        self.btn_detect_peaks.setLocale(QLocale(QLocale.English, QLocale.Germany))

        self.gridLayout_6.addWidget(self.btn_detect_peaks, 8, 0, 1, 1)

        self.btn_apply_filter = QPushButton(self.sidebar_page_plots)
        self.btn_apply_filter.setObjectName(u"btn_apply_filter")
        sizePolicy5.setHeightForWidth(self.btn_apply_filter.sizePolicy().hasHeightForWidth())
        self.btn_apply_filter.setSizePolicy(sizePolicy5)
        self.btn_apply_filter.setMinimumSize(QSize(0, 50))
        self.btn_apply_filter.setFont(font2)
        self.btn_apply_filter.setLocale(QLocale(QLocale.English, QLocale.Germany))

        self.gridLayout_6.addWidget(self.btn_apply_filter, 5, 0, 1, 1)

        self.container_active_signal = QFrame(self.sidebar_page_plots)
        self.container_active_signal.setObjectName(u"container_active_signal")
        sizePolicy5.setHeightForWidth(self.container_active_signal.sizePolicy().hasHeightForWidth())
        self.container_active_signal.setSizePolicy(sizePolicy5)
        self.container_active_signal.setCursor(QCursor(Qt.ArrowCursor))
        self.container_active_signal.setFrameShape(QFrame.StyledPanel)
        self.gridLayout_17 = QGridLayout(self.container_active_signal)
        self.gridLayout_17.setObjectName(u"gridLayout_17")
        self.btn_view_vent = QPushButton(self.container_active_signal)
        self.btn_group_plot_view = QButtonGroup(MainWindow)
        self.btn_group_plot_view.setObjectName(u"btn_group_plot_view")
        self.btn_group_plot_view.addButton(self.btn_view_vent)
        self.btn_view_vent.setObjectName(u"btn_view_vent")
        sizePolicy.setHeightForWidth(self.btn_view_vent.sizePolicy().hasHeightForWidth())
        self.btn_view_vent.setSizePolicy(sizePolicy)
        font3 = QFont()
        font3.setPointSize(13)
        font3.setBold(True)
        self.btn_view_vent.setFont(font3)
        self.btn_view_vent.setAutoFillBackground(False)
        self.btn_view_vent.setStyleSheet(u"")
        self.btn_view_vent.setCheckable(True)
        self.btn_view_vent.setAutoExclusive(True)
        self.btn_view_vent.setAutoDefault(False)

        self.gridLayout_17.addWidget(self.btn_view_vent, 1, 1, 1, 1)

        self.btn_view_hbr = QPushButton(self.container_active_signal)
        self.btn_group_plot_view.addButton(self.btn_view_hbr)
        self.btn_view_hbr.setObjectName(u"btn_view_hbr")
        sizePolicy.setHeightForWidth(self.btn_view_hbr.sizePolicy().hasHeightForWidth())
        self.btn_view_hbr.setSizePolicy(sizePolicy)
        font4 = QFont()
        font4.setPointSize(13)
        font4.setBold(True)
        font4.setUnderline(False)
        self.btn_view_hbr.setFont(font4)
        self.btn_view_hbr.setCheckable(True)
        self.btn_view_hbr.setChecked(True)
        self.btn_view_hbr.setAutoExclusive(True)
        self.btn_view_hbr.setAutoDefault(False)

        self.gridLayout_17.addWidget(self.btn_view_hbr, 1, 0, 1, 1)


        self.gridLayout_6.addWidget(self.container_active_signal, 1, 0, 1, 1)

        self.label_18 = QLabel(self.sidebar_page_plots)
        self.label_18.setObjectName(u"label_18")
        sizePolicy5.setHeightForWidth(self.label_18.sizePolicy().hasHeightForWidth())
        self.label_18.setSizePolicy(sizePolicy5)
        self.label_18.setFont(font)

        self.gridLayout_6.addWidget(self.label_18, 6, 0, 1, 1)

        self.container_signal_filtering_sidebar = QFrame(self.sidebar_page_plots)
        self.container_signal_filtering_sidebar.setObjectName(u"container_signal_filtering_sidebar")
        sizePolicy5.setHeightForWidth(self.container_signal_filtering_sidebar.sizePolicy().hasHeightForWidth())
        self.container_signal_filtering_sidebar.setSizePolicy(sizePolicy5)
        self.container_signal_filtering_sidebar.setFrameShape(QFrame.StyledPanel)
        self.gridLayout_2 = QGridLayout(self.container_signal_filtering_sidebar)
        self.gridLayout_2.setObjectName(u"gridLayout_2")
        self.container_standardize = QFrame(self.container_signal_filtering_sidebar)
        self.container_standardize.setObjectName(u"container_standardize")
        sizePolicy5.setHeightForWidth(self.container_standardize.sizePolicy().hasHeightForWidth())
        self.container_standardize.setSizePolicy(sizePolicy5)
        font5 = QFont()
        font5.setBold(False)
        self.container_standardize.setFont(font5)
        self.container_standardize.setFrameShape(QFrame.StyledPanel)
        self.gridLayout_9 = QGridLayout(self.container_standardize)
        self.gridLayout_9.setObjectName(u"gridLayout_9")
        self.combo_box_scale_method = ComboBox(self.container_standardize)
        self.combo_box_scale_method.setObjectName(u"combo_box_scale_method")

        self.gridLayout_9.addWidget(self.combo_box_scale_method, 0, 1, 1, 1)

        self.container_scale_window_inputs = QGroupBox(self.container_standardize)
        self.container_scale_window_inputs.setObjectName(u"container_scale_window_inputs")
        sizePolicy5.setHeightForWidth(self.container_scale_window_inputs.sizePolicy().hasHeightForWidth())
        self.container_scale_window_inputs.setSizePolicy(sizePolicy5)
        self.container_scale_window_inputs.setCheckable(True)
        self.container_scale_window_inputs.setChecked(True)
        self.formLayout_6 = QFormLayout(self.container_scale_window_inputs)
        self.formLayout_6.setObjectName(u"formLayout_6")
        self.label_2 = QLabel(self.container_scale_window_inputs)
        self.label_2.setObjectName(u"label_2")

        self.formLayout_6.setWidget(0, QFormLayout.LabelRole, self.label_2)

        self.spin_box_scale_window_size = QSpinBox(self.container_scale_window_inputs)
        self.spin_box_scale_window_size.setObjectName(u"spin_box_scale_window_size")
        self.spin_box_scale_window_size.setCorrectionMode(QAbstractSpinBox.CorrectToNearestValue)
        self.spin_box_scale_window_size.setMinimum(5)
        self.spin_box_scale_window_size.setMaximum(99999)
        self.spin_box_scale_window_size.setValue(2000)

        self.formLayout_6.setWidget(0, QFormLayout.FieldRole, self.spin_box_scale_window_size)


        self.gridLayout_9.addWidget(self.container_scale_window_inputs, 1, 0, 1, 2)

        self.label = QLabel(self.container_standardize)
        self.label.setObjectName(u"label")
        sizePolicy5.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy5)

        self.gridLayout_9.addWidget(self.label, 0, 0, 1, 1)


        self.gridLayout_2.addWidget(self.container_standardize, 3, 0, 1, 2)

        self.combo_box_preprocess_pipeline = ComboBox(self.container_signal_filtering_sidebar)
        self.combo_box_preprocess_pipeline.setObjectName(u"combo_box_preprocess_pipeline")
        self.combo_box_preprocess_pipeline.setFont(font1)

        self.gridLayout_2.addWidget(self.combo_box_preprocess_pipeline, 0, 1, 1, 1)

        self.label_12 = QLabel(self.container_signal_filtering_sidebar)
        self.label_12.setObjectName(u"label_12")
        self.label_12.setFont(font1)

        self.gridLayout_2.addWidget(self.label_12, 0, 0, 1, 1)

        self.label_16 = QLabel(self.container_signal_filtering_sidebar)
        self.label_16.setObjectName(u"label_16")
        sizePolicy5.setHeightForWidth(self.label_16.sizePolicy().hasHeightForWidth())
        self.label_16.setSizePolicy(sizePolicy5)
        font6 = QFont()
        font6.setPointSize(12)
        font6.setBold(True)
        self.label_16.setFont(font6)

        self.gridLayout_2.addWidget(self.label_16, 2, 0, 1, 1)

        self.container_custom_filter_inputs = QWidget(self.container_signal_filtering_sidebar)
        self.container_custom_filter_inputs.setObjectName(u"container_custom_filter_inputs")
        sizePolicy5.setHeightForWidth(self.container_custom_filter_inputs.sizePolicy().hasHeightForWidth())
        self.container_custom_filter_inputs.setSizePolicy(sizePolicy5)
        self.gridLayout_10 = QGridLayout(self.container_custom_filter_inputs)
        self.gridLayout_10.setObjectName(u"gridLayout_10")
        self.label_7 = QLabel(self.container_custom_filter_inputs)
        self.label_7.setObjectName(u"label_7")
        self.label_7.setFont(font1)

        self.gridLayout_10.addWidget(self.label_7, 0, 0, 1, 1)

        self.combo_box_filter_method = ComboBox(self.container_custom_filter_inputs)
        self.combo_box_filter_method.setObjectName(u"combo_box_filter_method")
        self.combo_box_filter_method.setFont(font1)

        self.gridLayout_10.addWidget(self.combo_box_filter_method, 0, 1, 1, 1)

        self.container_lowcut = QWidget(self.container_custom_filter_inputs)
        self.container_lowcut.setObjectName(u"container_lowcut")
        self.gridLayout_5 = QGridLayout(self.container_lowcut)
        self.gridLayout_5.setObjectName(u"gridLayout_5")
        self.label_8 = QLabel(self.container_lowcut)
        self.label_8.setObjectName(u"label_8")
        sizePolicy6 = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Preferred)
        sizePolicy6.setHorizontalStretch(0)
        sizePolicy6.setVerticalStretch(0)
        sizePolicy6.setHeightForWidth(self.label_8.sizePolicy().hasHeightForWidth())
        self.label_8.setSizePolicy(sizePolicy6)
        self.label_8.setFont(font1)

        self.gridLayout_5.addWidget(self.label_8, 0, 0, 1, 1)

        self.dbl_spin_box_lowcut = QDoubleSpinBox(self.container_lowcut)
        self.dbl_spin_box_lowcut.setObjectName(u"dbl_spin_box_lowcut")
        sizePolicy6.setHeightForWidth(self.dbl_spin_box_lowcut.sizePolicy().hasHeightForWidth())
        self.dbl_spin_box_lowcut.setSizePolicy(sizePolicy6)
        self.dbl_spin_box_lowcut.setFont(font1)
        self.dbl_spin_box_lowcut.setWrapping(False)
        self.dbl_spin_box_lowcut.setFrame(True)
        self.dbl_spin_box_lowcut.setCorrectionMode(QAbstractSpinBox.CorrectToNearestValue)
        self.dbl_spin_box_lowcut.setMaximum(999.990000000000009)
        self.dbl_spin_box_lowcut.setSingleStep(0.100000000000000)
        self.dbl_spin_box_lowcut.setStepType(QAbstractSpinBox.AdaptiveDecimalStepType)
        self.dbl_spin_box_lowcut.setValue(0.500000000000000)

        self.gridLayout_5.addWidget(self.dbl_spin_box_lowcut, 0, 1, 1, 1)


        self.gridLayout_10.addWidget(self.container_lowcut, 1, 0, 1, 1, Qt.AlignLeft)

        self.container_highcut = QWidget(self.container_custom_filter_inputs)
        self.container_highcut.setObjectName(u"container_highcut")
        self.gridLayout_3 = QGridLayout(self.container_highcut)
        self.gridLayout_3.setObjectName(u"gridLayout_3")
        self.label_9 = QLabel(self.container_highcut)
        self.label_9.setObjectName(u"label_9")
        sizePolicy6.setHeightForWidth(self.label_9.sizePolicy().hasHeightForWidth())
        self.label_9.setSizePolicy(sizePolicy6)
        self.label_9.setFont(font1)
        self.label_9.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)

        self.gridLayout_3.addWidget(self.label_9, 0, 0, 1, 1)

        self.dbl_spin_box_highcut = QDoubleSpinBox(self.container_highcut)
        self.dbl_spin_box_highcut.setObjectName(u"dbl_spin_box_highcut")
        sizePolicy6.setHeightForWidth(self.dbl_spin_box_highcut.sizePolicy().hasHeightForWidth())
        self.dbl_spin_box_highcut.setSizePolicy(sizePolicy6)
        self.dbl_spin_box_highcut.setFont(font1)
        self.dbl_spin_box_highcut.setFrame(True)
        self.dbl_spin_box_highcut.setCorrectionMode(QAbstractSpinBox.CorrectToNearestValue)
        self.dbl_spin_box_highcut.setMaximum(999.990000000000009)
        self.dbl_spin_box_highcut.setSingleStep(0.100000000000000)
        self.dbl_spin_box_highcut.setValue(10.000000000000000)

        self.gridLayout_3.addWidget(self.dbl_spin_box_highcut, 0, 1, 1, 1)


        self.gridLayout_10.addWidget(self.container_highcut, 1, 1, 1, 1, Qt.AlignRight)

        self.label_10 = QLabel(self.container_custom_filter_inputs)
        self.label_10.setObjectName(u"label_10")
        sizePolicy7 = QSizePolicy(QSizePolicy.Maximum, QSizePolicy.Preferred)
        sizePolicy7.setHorizontalStretch(0)
        sizePolicy7.setVerticalStretch(0)
        sizePolicy7.setHeightForWidth(self.label_10.sizePolicy().hasHeightForWidth())
        self.label_10.setSizePolicy(sizePolicy7)
        self.label_10.setFont(font1)

        self.gridLayout_10.addWidget(self.label_10, 2, 0, 1, 1)

        self.label_11 = QLabel(self.container_custom_filter_inputs)
        self.label_11.setObjectName(u"label_11")
        sizePolicy7.setHeightForWidth(self.label_11.sizePolicy().hasHeightForWidth())
        self.label_11.setSizePolicy(sizePolicy7)
        self.label_11.setFont(font1)
        self.label_11.setScaledContents(True)

        self.gridLayout_10.addWidget(self.label_11, 4, 0, 1, 1)

        self.container_order_inputs = QWidget(self.container_custom_filter_inputs)
        self.container_order_inputs.setObjectName(u"container_order_inputs")
        sizePolicy.setHeightForWidth(self.container_order_inputs.sizePolicy().hasHeightForWidth())
        self.container_order_inputs.setSizePolicy(sizePolicy)
        self.container_order_inputs.setFont(font1)
        self.horizontalLayout_5 = QHBoxLayout(self.container_order_inputs)
        self.horizontalLayout_5.setObjectName(u"horizontalLayout_5")
        self.slider_order = QSlider(self.container_order_inputs)
        self.slider_order.setObjectName(u"slider_order")
        sizePolicy5.setHeightForWidth(self.slider_order.sizePolicy().hasHeightForWidth())
        self.slider_order.setSizePolicy(sizePolicy5)
        self.slider_order.setFont(font1)
        self.slider_order.setMinimum(2)
        self.slider_order.setMaximum(10)
        self.slider_order.setOrientation(Qt.Horizontal)
        self.slider_order.setTickPosition(QSlider.TicksBelow)
        self.slider_order.setTickInterval(1)

        self.horizontalLayout_5.addWidget(self.slider_order)

        self.spin_box_order = QSpinBox(self.container_order_inputs)
        self.spin_box_order.setObjectName(u"spin_box_order")
        sizePolicy6.setHeightForWidth(self.spin_box_order.sizePolicy().hasHeightForWidth())
        self.spin_box_order.setSizePolicy(sizePolicy6)
        self.spin_box_order.setMinimumSize(QSize(45, 0))
        self.spin_box_order.setFont(font1)
        self.spin_box_order.setFrame(True)
        self.spin_box_order.setCorrectionMode(QAbstractSpinBox.CorrectToNearestValue)
        self.spin_box_order.setMinimum(2)
        self.spin_box_order.setMaximum(10)

        self.horizontalLayout_5.addWidget(self.spin_box_order)


        self.gridLayout_10.addWidget(self.container_order_inputs, 3, 0, 1, 2)

        self.container_window_size = QWidget(self.container_custom_filter_inputs)
        self.container_window_size.setObjectName(u"container_window_size")
        self.container_window_size.setFont(font1)
        self.horizontalLayout_3 = QHBoxLayout(self.container_window_size)
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.slider_window_size = QSlider(self.container_window_size)
        self.slider_window_size.setObjectName(u"slider_window_size")
        sizePolicy5.setHeightForWidth(self.slider_window_size.sizePolicy().hasHeightForWidth())
        self.slider_window_size.setSizePolicy(sizePolicy5)
        self.slider_window_size.setFont(font1)
        self.slider_window_size.setMinimum(5)
        self.slider_window_size.setMaximum(3333)
        self.slider_window_size.setSingleStep(1)
        self.slider_window_size.setValue(250)
        self.slider_window_size.setOrientation(Qt.Horizontal)
        self.slider_window_size.setTickPosition(QSlider.TicksBelow)
        self.slider_window_size.setTickInterval(333)

        self.horizontalLayout_3.addWidget(self.slider_window_size)

        self.spin_box_window_size = QSpinBox(self.container_window_size)
        self.spin_box_window_size.setObjectName(u"spin_box_window_size")
        sizePolicy6.setHeightForWidth(self.spin_box_window_size.sizePolicy().hasHeightForWidth())
        self.spin_box_window_size.setSizePolicy(sizePolicy6)
        self.spin_box_window_size.setMinimumSize(QSize(45, 0))
        self.spin_box_window_size.setFont(font1)
        self.spin_box_window_size.setFrame(True)
        self.spin_box_window_size.setAccelerated(True)
        self.spin_box_window_size.setCorrectionMode(QAbstractSpinBox.CorrectToNearestValue)
        self.spin_box_window_size.setMinimum(5)
        self.spin_box_window_size.setMaximum(3333)
        self.spin_box_window_size.setSingleStep(1)
        self.spin_box_window_size.setValue(250)

        self.horizontalLayout_3.addWidget(self.spin_box_window_size)


        self.gridLayout_10.addWidget(self.container_window_size, 5, 0, 1, 2)


        self.gridLayout_2.addWidget(self.container_custom_filter_inputs, 1, 0, 1, 2)


        self.gridLayout_6.addWidget(self.container_signal_filtering_sidebar, 3, 0, 1, 1)

        self.btn_compute_results = QPushButton(self.sidebar_page_plots)
        self.btn_compute_results.setObjectName(u"btn_compute_results")
        self.btn_compute_results.setEnabled(False)
        sizePolicy5.setHeightForWidth(self.btn_compute_results.sizePolicy().hasHeightForWidth())
        self.btn_compute_results.setSizePolicy(sizePolicy5)
        self.btn_compute_results.setMinimumSize(QSize(0, 50))
        self.btn_compute_results.setFont(font2)

        self.gridLayout_6.addWidget(self.btn_compute_results, 9, 0, 1, 1)

        self.container_peak_detection_sidebar = QFrame(self.sidebar_page_plots)
        self.container_peak_detection_sidebar.setObjectName(u"container_peak_detection_sidebar")
        sizePolicy8 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Expanding)
        sizePolicy8.setHorizontalStretch(0)
        sizePolicy8.setVerticalStretch(0)
        sizePolicy8.setHeightForWidth(self.container_peak_detection_sidebar.sizePolicy().hasHeightForWidth())
        self.container_peak_detection_sidebar.setSizePolicy(sizePolicy8)
        self.container_peak_detection_sidebar.setFrameShape(QFrame.StyledPanel)
        self.layout_container_peak_detection_sidebar = QGridLayout(self.container_peak_detection_sidebar)
        self.layout_container_peak_detection_sidebar.setObjectName(u"layout_container_peak_detection_sidebar")
        self.container_peak_detection_method = QWidget(self.container_peak_detection_sidebar)
        self.container_peak_detection_method.setObjectName(u"container_peak_detection_method")
        sizePolicy5.setHeightForWidth(self.container_peak_detection_method.sizePolicy().hasHeightForWidth())
        self.container_peak_detection_method.setSizePolicy(sizePolicy5)
        self.container_peak_detection_method.setFont(font1)
        self.layout_container_peak_detection_method = QFormLayout(self.container_peak_detection_method)
        self.layout_container_peak_detection_method.setObjectName(u"layout_container_peak_detection_method")
        self.layout_container_peak_detection_method.setFieldGrowthPolicy(QFormLayout.AllNonFixedFieldsGrow)
        self.layout_container_peak_detection_method.setLabelAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.layout_container_peak_detection_method.setFormAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.label_method = QLabel(self.container_peak_detection_method)
        self.label_method.setObjectName(u"label_method")
        sizePolicy.setHeightForWidth(self.label_method.sizePolicy().hasHeightForWidth())
        self.label_method.setSizePolicy(sizePolicy)
        self.label_method.setFont(font1)

        self.layout_container_peak_detection_method.setWidget(0, QFormLayout.LabelRole, self.label_method)

        self.combo_box_peak_detection_method = ComboBox(self.container_peak_detection_method)
        self.combo_box_peak_detection_method.setObjectName(u"combo_box_peak_detection_method")
        sizePolicy5.setHeightForWidth(self.combo_box_peak_detection_method.sizePolicy().hasHeightForWidth())
        self.combo_box_peak_detection_method.setSizePolicy(sizePolicy5)
        self.combo_box_peak_detection_method.setFont(font1)
        self.combo_box_peak_detection_method.setMaxVisibleItems(10)
        self.combo_box_peak_detection_method.setMaxCount(50)
        self.combo_box_peak_detection_method.setInsertPolicy(QComboBox.NoInsert)

        self.layout_container_peak_detection_method.setWidget(0, QFormLayout.FieldRole, self.combo_box_peak_detection_method)


        self.layout_container_peak_detection_sidebar.addWidget(self.container_peak_detection_method, 0, 0, 1, 1)


        self.gridLayout_6.addWidget(self.container_peak_detection_sidebar, 7, 0, 1, 1)

        self.sidebar.addWidget(self.sidebar_page_plots)
        self.sidebar_page_results = QWidget()
        self.sidebar_page_results.setObjectName(u"sidebar_page_results")
        self.gridLayout_7 = QGridLayout(self.sidebar_page_results)
        self.gridLayout_7.setObjectName(u"gridLayout_7")
        self.sidebar.addWidget(self.sidebar_page_results)

        self.layout_sidebar_dock.addWidget(self.sidebar, 0, 0, 1, 1)

        self.dock_widget_sidebar.setWidget(self.sidebar_dock_contents)
        MainWindow.addDockWidget(Qt.LeftDockWidgetArea, self.dock_widget_sidebar)
#if QT_CONFIG(shortcut)
        self.label_13.setBuddy(self.date_edit_file_info)
        self.label_14.setBuddy(self.line_edit_subject_id)
        self.label_15.setBuddy(self.combo_box_oxygen_condition)
        self.label_filter_column.setBuddy(self.combo_box_filter_column)
        self.label_subset_min.setBuddy(self.dbl_spin_box_subset_min)
        self.label_subset_max.setBuddy(self.dbl_spin_box_subset_max)
        self.label_17.setBuddy(self.spin_box_fs)
        self.label_2.setBuddy(self.spin_box_scale_window_size)
        self.label.setBuddy(self.combo_box_scale_method)
        self.label_12.setBuddy(self.combo_box_preprocess_pipeline)
        self.label_7.setBuddy(self.combo_box_filter_method)
        self.label_8.setBuddy(self.dbl_spin_box_lowcut)
        self.label_9.setBuddy(self.dbl_spin_box_highcut)
        self.label_method.setBuddy(self.combo_box_peak_detection_method)
#endif // QT_CONFIG(shortcut)

        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_info.menuAction())
        self.menu_file.addAction(self.action_select_file)
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.action_exit)
        self.menu_info.addAction(self.action_toggle_whats_this_mode)
        self.toolbar.addAction(self.action_open_console)
        self.toolbar.addSeparator()
        self.toolbar.addAction(self.action_run_preprocessing)
        self.toolbar.addAction(self.action_run_peak_detection)
        self.toolbar.addAction(self.action_get_results)
        self.toolbar_plots.addAction(self.action_reset_view)
        self.toolbar_plots.addAction(self.action_pan_mode)
        self.toolbar_plots.addAction(self.action_rect_mode)
        self.toolbar_plots.addSeparator()
        self.toolbar_plots.addAction(self.action_remove_selected_peaks)
        self.toolbar_plots.addAction(self.action_show_roi)
        self.toolbar_plots.addSeparator()
        self.toolbar_plots.addAction(self.action_redraw_with_current_values)
        self.toolbar_plots.addAction(self.action_step_forward)
        self.toolbar_plots.addAction(self.action_step_backward)

        self.retranslateUi(MainWindow)
        self.tabs_main.currentChanged.connect(self.sidebar.setCurrentIndex)
        self.slider_order.valueChanged.connect(self.spin_box_order.setValue)
        self.spin_box_order.valueChanged.connect(self.slider_order.setValue)
        self.slider_window_size.valueChanged.connect(self.spin_box_window_size.setValue)
        self.spin_box_window_size.valueChanged.connect(self.slider_window_size.setValue)

        self.tabs_main.setCurrentIndex(0)
        self.stacked_hbr_vent.setCurrentIndex(0)
        self.tabs_result.setCurrentIndex(0)
        self.sidebar.setCurrentIndex(0)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"Signal Editor", None))
        self.action_open_console.setText(QCoreApplication.translate("MainWindow", u"Console", None))
#if QT_CONFIG(tooltip)
        self.action_open_console.setToolTip(QCoreApplication.translate("MainWindow", u"Open a python console with access to the application state", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.action_open_console.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Shift+P", None))
#endif // QT_CONFIG(shortcut)
        self.action_toggle_sidebar.setText(QCoreApplication.translate("MainWindow", u"Show Sidebar", None))
#if QT_CONFIG(tooltip)
        self.action_toggle_sidebar.setToolTip(QCoreApplication.translate("MainWindow", u"Show / Hide sidebar", None))
#endif // QT_CONFIG(tooltip)
        self.action_select_file.setText(QCoreApplication.translate("MainWindow", u"Select", None))
#if QT_CONFIG(tooltip)
        self.action_select_file.setToolTip(QCoreApplication.translate("MainWindow", u"Select a file to work on", None))
#endif // QT_CONFIG(tooltip)
        self.action_exit.setText(QCoreApplication.translate("MainWindow", u"Exit", None))
#if QT_CONFIG(tooltip)
        self.action_exit.setToolTip(QCoreApplication.translate("MainWindow", u"Exit program", None))
#endif // QT_CONFIG(tooltip)
        self.action_update_result.setText(QCoreApplication.translate("MainWindow", u"Update result preview", None))
#if QT_CONFIG(tooltip)
        self.action_update_result.setToolTip(QCoreApplication.translate("MainWindow", u"Updates the results from the current values, viewable in the \"Results\" tab", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.action_update_result.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.action_pan_mode.setText(QCoreApplication.translate("MainWindow", u"Pan Mode", None))
#if QT_CONFIG(tooltip)
        self.action_pan_mode.setToolTip(QCoreApplication.translate("MainWindow", u"Press the mouse-wheel to switch between 'pan' and 'rect' mode", None))
#endif // QT_CONFIG(tooltip)
        self.action_rect_mode.setText(QCoreApplication.translate("MainWindow", u"Rect Mode", None))
#if QT_CONFIG(tooltip)
        self.action_rect_mode.setToolTip(QCoreApplication.translate("MainWindow", u"Press the mouse-wheel to switch between 'pan' and 'rect' mode", None))
#endif // QT_CONFIG(tooltip)
        self.action_reset_view.setText(QCoreApplication.translate("MainWindow", u"Reset View", None))
#if QT_CONFIG(tooltip)
        self.action_reset_view.setToolTip(QCoreApplication.translate("MainWindow", u"Adjusts the plot view to include all existing values.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.action_reset_view.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+A", None))
#endif // QT_CONFIG(shortcut)
        self.action_redraw_with_current_values.setText(QCoreApplication.translate("MainWindow", u"Redraw plot", None))
#if QT_CONFIG(tooltip)
        self.action_redraw_with_current_values.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Re-draws the plots using the current values from the input widgets, unless there is no difference between the previous and current input values, in which case it just resets the view to show the entire dataset without changing anything.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.action_redraw_with_current_values.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+R", None))
#endif // QT_CONFIG(shortcut)
        self.action_step_backward.setText(QCoreApplication.translate("MainWindow", u"Step Backward", None))
#if QT_CONFIG(tooltip)
        self.action_step_backward.setToolTip(QCoreApplication.translate("MainWindow", u"Go to the previous state of the plot", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.action_step_backward.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Left", None))
#endif // QT_CONFIG(shortcut)
        self.action_step_forward.setText(QCoreApplication.translate("MainWindow", u"Step Forward", None))
#if QT_CONFIG(tooltip)
        self.action_step_forward.setToolTip(QCoreApplication.translate("MainWindow", u"Go to the next state of the plot", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.action_step_forward.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Right", None))
#endif // QT_CONFIG(shortcut)
        self.action_toggle_whats_this_mode.setText(QCoreApplication.translate("MainWindow", u"Whats this?", None))
#if QT_CONFIG(tooltip)
        self.action_toggle_whats_this_mode.setToolTip(QCoreApplication.translate("MainWindow", u"When enabled, shows descriptions of UI elements you click on", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.action_toggle_whats_this_mode.setShortcut(QCoreApplication.translate("MainWindow", u"F1", None))
#endif // QT_CONFIG(shortcut)
        self.action_show_roi.setText(QCoreApplication.translate("MainWindow", u"Toggle ROI Selector", None))
#if QT_CONFIG(tooltip)
        self.action_show_roi.setToolTip(QCoreApplication.translate("MainWindow", u"Toggle a selection rectangle for marking multiple scatter points at once", None))
#endif // QT_CONFIG(tooltip)
        self.action_run_preprocessing.setText(QCoreApplication.translate("MainWindow", u"Run pre-processing", None))
#if QT_CONFIG(tooltip)
        self.action_run_preprocessing.setToolTip(QCoreApplication.translate("MainWindow", u"Filter and standardize the active signal with the currently selected values", None))
#endif // QT_CONFIG(tooltip)
        self.action_run_peak_detection.setText(QCoreApplication.translate("MainWindow", u"Run peak detection", None))
#if QT_CONFIG(tooltip)
        self.action_run_peak_detection.setToolTip(QCoreApplication.translate("MainWindow", u"Detect peaks in the current signal using the selected method and input values", None))
#endif // QT_CONFIG(tooltip)
        self.action_get_results.setText(QCoreApplication.translate("MainWindow", u"Get Results", None))
#if QT_CONFIG(tooltip)
        self.action_get_results.setToolTip(QCoreApplication.translate("MainWindow", u"Creates exportable results from the current data", None))
#endif // QT_CONFIG(tooltip)
        self.action_remove_selected_peaks.setText(QCoreApplication.translate("MainWindow", u"Remove Selected", None))
#if QT_CONFIG(tooltip)
        self.action_remove_selected_peaks.setToolTip(QCoreApplication.translate("MainWindow", u"Remove the peaks marked by the ROI selection rectangle", None))
#endif // QT_CONFIG(tooltip)
        self.label_19.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:14pt; font-weight:700;\">Info</span></p></body></html>", None))
        self.text_info_loading_data.setHtml(QCoreApplication.translate("MainWindow", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:'Segoe UI'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:700;\">Requirements</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:700;\">European Data Format (.edf)</span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\">\n"
"<li style=\" margin-top:12px;"
                        " margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Has at least 3 channels with `ch0` containing temperature, `ch1` containing heartbeat and `ch2` containing ventilation data</li>\n"
"<li style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The name of the temperature channel contains the sub-string &quot;temp&quot;, the name of the heartbeat channel contains the sub-string &quot;hb&quot; or &quot;heart&quot; and the name of the ventilation channel contains the sub-string &quot;vent&quot; (all case-insensitive)<br /></li></ul>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:700;\">Feather (.feather)</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">Required column structure:</s"
                        "pan></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:'Courier New';\">\u2502 index    \u2506 time_s     \u2506 temperature \u2506 hbr       \u2506 ventilation \u2502<br />\u2502 ---      \u2506 ---        \u2506 ---         \u2506 ---       \u2506 ---         \u2502<br />\u2502 u32      \u2506 f64        \u2506 f64         \u2506 f64       \u2506 f64         \u2502<br />    </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A more general approach will (hopefully) be implemented sometime in the future.<br /></p>\n"
"<p style=\" margin-top:12px; margin-bottom:4px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:700;\">Data selection</span></p>\n"
"<ol style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\">\n"
"<li st"
                        "yle=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Click <span style=\" font-style:italic;\">Select File</span> and choose a compatible data file to load</li>\n"
"<li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The active working data can be limited by selecting a column name from the dropdown menu along with specifying the upper and lower allowed limits. The lower and upper limit are both inclusive, so setting the lower limit to 10 and the upper to 100 would result in the values 10 - 100 being loaded</li>\n"
"<li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">To work with the entire dataset, just leave the <span style=\" font-style:italic;\">Specify subset</span> checkbox unchecked</li>\n"
"<li style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-inde"
                        "nt:0px;\">Finally, use the <span style=\" font-style:italic;\">Load</span> button to load the selected range of data into the program.</li></ol>\n"
"<p style=\" margin-top:12px; margin-bottom:4px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:700;\">Editing</span></p></body></html>", None))
        self.tabs_main.setTabText(self.tabs_main.indexOf(self.tab_data), QCoreApplication.translate("MainWindow", u"Data", None))
        self.tabs_main.setTabText(self.tabs_main.indexOf(self.tab_plots), QCoreApplication.translate("MainWindow", u"Plots", None))
        self.btn_browse_output_dir.setText(QCoreApplication.translate("MainWindow", u"Browse", None))
        self.line_edit_output_dir.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Specify an output directory for the exported files. By default (when left empty), use the same folder as the applications .exe file", None))
        self.btn_export_to_csv.setText(QCoreApplication.translate("MainWindow", u"Export to CSV", None))
        self.btn_export_to_excel.setText(QCoreApplication.translate("MainWindow", u"Export to Excel", None))
        self.btn_export_to_text.setText(QCoreApplication.translate("MainWindow", u"Export to Text", None))
        self.tabs_result.setTabText(self.tabs_result.indexOf(self.tab_results_hbr), QCoreApplication.translate("MainWindow", u"Heart", None))
        self.tabs_result.setTabText(self.tabs_result.indexOf(self.tab_results_ventilation), QCoreApplication.translate("MainWindow", u"Ventilation", None))
        self.tabs_main.setTabText(self.tabs_main.indexOf(self.tab_results), QCoreApplication.translate("MainWindow", u"Results", None))
        self.menu_file.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
        self.menu_info.setTitle(QCoreApplication.translate("MainWindow", u"Info", None))
        self.toolbar.setWindowTitle(QCoreApplication.translate("MainWindow", u"toolBar", None))
        self.toolbar_plots.setWindowTitle(QCoreApplication.translate("MainWindow", u"toolbar_plots", None))
        self.dock_widget_sidebar.setWindowTitle(QCoreApplication.translate("MainWindow", u"Sidebar", None))
        self.label_4.setText(QCoreApplication.translate("MainWindow", u"Data Selection", None))
        self.label_13.setText(QCoreApplication.translate("MainWindow", u"Date of recording (yyyy-mm-dd):", None))
        self.date_edit_file_info.setDisplayFormat(QCoreApplication.translate("MainWindow", u"yyyy-MM-dd", None))
        self.label_14.setText(QCoreApplication.translate("MainWindow", u"Subject ID:", None))
        self.label_15.setText(QCoreApplication.translate("MainWindow", u"Oxygen condition:", None))
        self.btn_load_selection.setText(QCoreApplication.translate("MainWindow", u"Load", None))
        self.btn_select_file.setText(QCoreApplication.translate("MainWindow", u"Select File", None))
        self.group_box_subset_params.setTitle(QCoreApplication.translate("MainWindow", u"(Optional) Specify subset", None))
        self.label_filter_column.setText(QCoreApplication.translate("MainWindow", u"Filter column:", None))
        self.label_subset_min.setText(QCoreApplication.translate("MainWindow", u"Lower limit:", None))
        self.label_subset_max.setText(QCoreApplication.translate("MainWindow", u"Upper limit:", None))
        self.label_17.setText(QCoreApplication.translate("MainWindow", u"Sampling Frequency:", None))
#if QT_CONFIG(tooltip)
        self.spin_box_fs.setToolTip(QCoreApplication.translate("MainWindow", u"Frequency with which the data was recorded in Hz (samples per second) ", None))
#endif // QT_CONFIG(tooltip)
        self.spin_box_fs.setSuffix(QCoreApplication.translate("MainWindow", u" Hz", None))
        self.label_3.setText(QCoreApplication.translate("MainWindow", u"Metadata", None))
        self.label_5.setText(QCoreApplication.translate("MainWindow", u"Active Signal", None))
        self.label_6.setText(QCoreApplication.translate("MainWindow", u"Pre-processing", None))
#if QT_CONFIG(whatsthis)
        self.btn_detect_peaks.setWhatsThis(QCoreApplication.translate("MainWindow", u"Runs the currently selected peak detection method using the shown parameters (editable in the \"Peak Detection\" section above).", None))
#endif // QT_CONFIG(whatsthis)
        self.btn_detect_peaks.setText(QCoreApplication.translate("MainWindow", u"Run peak detection", None))
#if QT_CONFIG(whatsthis)
        self.btn_apply_filter.setWhatsThis(QCoreApplication.translate("MainWindow", u"Applies the currently selected pipeline or custom filter to the active signal. Repeated filtering will overwrite the previous values, so its currently not possible to apply a filter to an already filtered signal.", None))
#endif // QT_CONFIG(whatsthis)
        self.btn_apply_filter.setText(QCoreApplication.translate("MainWindow", u"Run pre-processing", None))
        self.btn_view_vent.setText(QCoreApplication.translate("MainWindow", u"Ventilation", None))
        self.btn_view_hbr.setText(QCoreApplication.translate("MainWindow", u"Heart", None))
        self.label_18.setText(QCoreApplication.translate("MainWindow", u"Peak Detection", None))
#if QT_CONFIG(tooltip)
        self.container_standardize.setToolTip(QCoreApplication.translate("MainWindow", u"Standardization is applied post-filtering", None))
#endif // QT_CONFIG(tooltip)
        self.container_scale_window_inputs.setTitle(QCoreApplication.translate("MainWindow", u"Apply using rolling window", None))
        self.label_2.setText(QCoreApplication.translate("MainWindow", u"Window Size:", None))
        self.label.setText(QCoreApplication.translate("MainWindow", u"Method:", None))
#if QT_CONFIG(tooltip)
        self.combo_box_preprocess_pipeline.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Select the pre-processing pipeline for the signal or create a custom filter</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_12.setText(QCoreApplication.translate("MainWindow", u"Pre-processing pipeline:", None))
#if QT_CONFIG(tooltip)
        self.label_16.setToolTip(QCoreApplication.translate("MainWindow", u"Standardization is applied post-filtering", None))
#endif // QT_CONFIG(tooltip)
        self.label_16.setText(QCoreApplication.translate("MainWindow", u"Standardize", None))
        self.label_7.setText(QCoreApplication.translate("MainWindow", u"Filter Type:", None))
        self.label_8.setText(QCoreApplication.translate("MainWindow", u"Lowcut:", None))
        self.dbl_spin_box_lowcut.setSuffix(QCoreApplication.translate("MainWindow", u" Hz", None))
        self.label_9.setText(QCoreApplication.translate("MainWindow", u"Highcut:", None))
        self.dbl_spin_box_highcut.setSuffix(QCoreApplication.translate("MainWindow", u" Hz", None))
        self.label_10.setText(QCoreApplication.translate("MainWindow", u"Order:", None))
        self.label_11.setText(QCoreApplication.translate("MainWindow", u"Window Size:", None))
#if QT_CONFIG(whatsthis)
        self.btn_compute_results.setWhatsThis(QCoreApplication.translate("MainWindow", u"Takes the current state of the app, signal, detected peaks, etc. and produces a results table shown in the \"Results\" tab. From there, the results can be exported to various file formats.", None))
#endif // QT_CONFIG(whatsthis)
        self.btn_compute_results.setText(QCoreApplication.translate("MainWindow", u"Get Results", None))
        self.label_method.setText(QCoreApplication.translate("MainWindow", u"Method:", None))
    # retranslateUi

